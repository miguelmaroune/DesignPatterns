Lets you attach new behaviors to an object by placing this object inside a special wrapper that contains these behaviors.
use composition instead of Inheritance to substitue an object with another.

so 7a ykoun 3enna component interface in our example its the INotifier that will declare the common behaviors for both wrappers and wrapped objects.
then the concreteComponent (Notifier in our example) its the wrapped class that defines the basic behavior which can be altered by decorators.
then the BasicDecorators (BaseNotifierDecorator in our example) must reference the wrapped object via the interface so it can reference both the concrete component and its decorators.
The ConcreteDecorator (FaceBookDecorator WhatsAppDecorator) they will ovveride the methods of the base decorator but still make use of it either before or after their own execution.
finally the client can wrap components in layers of decorators but must work via the component interface.
